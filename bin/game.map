ROM Bank #0 (HOME):
  SECTION: $0000-$0002 ($0003 bytes) ["Org $00"]
           $0000 = RST_00
  SECTION: $0008-$000A ($0003 bytes) ["Org $08"]
           $0008 = RST_08
  SECTION: $0010-$0012 ($0003 bytes) ["Org $10"]
           $0010 = RST_10
  SECTION: $0018-$001A ($0003 bytes) ["Org $18"]
           $0018 = RST_18
  SECTION: $0020-$0022 ($0003 bytes) ["Org $20"]
           $0020 = RST_20
  SECTION: $0028-$002A ($0003 bytes) ["Copy Data"]
           $0028 = RST_28
  SECTION: $0030-$0032 ($0003 bytes) ["Org $30"]
           $0030 = RST_30
  SECTION: $0038-$003A ($0003 bytes) ["Org $38"]
           $0038 = RST_38
  SECTION: $0040-$0040 ($0001 bytes) ["V-Blank IRQ Vector"]
           $0040 = VBL_VECT
  SECTION: $0048-$0048 ($0001 bytes) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 bytes) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 bytes) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$00F8 ($0099 bytes) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0100-$014B ($004C bytes) ["Start"]
  SECTION: $207C-$21C4 ($0149 bytes) ["Utilitaries"]
           $20C6 = COPY_DATA
           $2169 = JOY_FALSE
           $2170 = WAIT_LOOP_INT
           $216E = WAIT_LOOP_EXT1
           $216C = WAIT_LOOP_EXT2
           $216C = WAIT
           $20A1 = CLEAR_RAM
           $207C = WAIT_VBLANK
           $21A0 = FADE_OUT
           $217F = FADE_IN
           $20E9 = READ_JOYPAD
           $215F = JOY_START
           $2141 = JOY_A
           $212D = JOY_UP
           $2137 = JOY_DOWN
           $2119 = JOY_RIGHT
           $2123 = JOY_LEFT
           $21C1 = RAND_NUM
           $2083 = CLEAR_MAP
           $2092 = CLEAR_OAM
           $20D7 = LOAD_TILES
           $20E0 = LOAD_MAP
           $20B0 = DMA_COPY
           $214B = JOY_B
           $2098 = CLEAR_OAM_LOOP
           $2155 = JOY_SELECT
           $20CC = COPY_DATA_LOOP
           $20E0 = LOAD_MAP_LOOP
           $208B = CLEAR_MAP_LOOP
           $20A7 = CLEAR_RAM_LOOP
  SECTION: $0F65-$1BA4 ($0C40 bytes) ["Background Map"]
           $0F65 = SPLASH_MAP
           $17A5 = LVL1_MAP
           $1365 = BGMAP
           $1765 = WINDOWMAP
  SECTION: $1BA5-$1DB4 ($0210 bytes) ["Sprite Tiles"]
           $1BA5 = SPLASH_SPRITES
           $1C65 = LVL1_SPRITES
           $1CA5 = LVL2_SPRITES
  SECTION: $01C5-$0F64 ($0DA0 bytes) ["Background Tiles"]
           $01C5 = SPLASH_TILES
           $0DA5 = BG1_2
           $0D25 = BG1_0
           $0D65 = BG1_1
           $0E25 = BG2_1
           $0DE5 = BG2_0
           $0E65 = BG2_2
           $0CE5 = BG0_2
           $0CA5 = BG0_1
           $0C65 = BG0_0
           $0EA5 = BG3_0
           $0EE5 = BG3_1
           $0F25 = BG3_2
  SECTION: $1F1E-$207B ($015E bytes) ["SplashScreen"]
           $1FE5 = SPLASH_SCROLL_END
           $1FCD = SPLASH_SCREEN
           $2044 = EXIT_SPLASH
           $1FFB = SPLASH_WAIT
           $1F1E = INIT_SPLASH
  SECTION: $2357-$23B2 ($005C bytes) ["Level1"]
           $2381 = LEVEL1_LOOP
           $239A = SCROLL_BACKGROUND
           $23A7 = SCROLL_BG
           $2357 = LEVEL1
  SECTION: $21C5-$22CA ($0106 bytes) ["Level1Character"]
           $21C5 = LVL1_INIT_CHARACTER
           $21F3 = LVL1_UPDATE_CHAR
           $2298 = LVL1_CHARACTER_ENEMY_COLLISION
           $220E = LVL1_CHECK_UP
           $2232 = LVL1_CHECK_DOWN
           $2256 = LVL1_CHECK_RIGHT
           $2277 = LVL1_CHECK_LEFT
           $22CA = LVL1_END_CHAR
  SECTION: $22CB-$2356 ($008C bytes) ["Shot"]
           $22CB = LVL1_INIT_SHOT
           $22FD = LVL1_UPDATE_SHOT
           $22EA = LVL1_ACTIVATE_SHOT
           $2356 = LVL1_SHOT_END
           $2309 = LVL1_MOVE_RIGHT
           $2350 = LVL1_RESET_SHOT
           $2320 = LVL1_SHOT_ENEMY_COLLISION
  SECTION: $1DB5-$1F1D ($0169 bytes) ["Level1Enemy"]
           $1DB5 = LVL1_INIT_ENEMY
           $1DD5 = LVL1_UPDATE_ENEMY
           $1E4E = LVL1_RESET_ENEMY
           $1E80 = LVL1_ENEMY0
           $1DE6 = LVL1_ENEMY_DIRECTION_UP
           $1DEE = LVL1_ENEMY_DIRECTION_DOWN
           $1DF6 = LVL1_MOVE_ENEMY
           $1E04 = LVL1_MOVE_ENEMY_DOWN
           $1E29 = LVL1_MOVE_ENEMY_UP
           $1F16 = LVL1_ENEMY_END
           $1E93 = LVL1_ENEMY1
           $1EB5 = LVL1_ENEMY2
           $1ED2 = LVL1_ENEMY3
           $1EF4 = LVL1_ENEMY4
  SECTION: $0150-$01C4 ($0075 bytes) ["StartGame"]
           $0150 = START
           $01BC = BEGIN_GAME
    SLACK: $1C9C bytes

WRAM Bank #0:
  SECTION: $C000-$C016 ($0017 bytes) ["RAM Vars"]
           $C002 = joypad_down
           $C003 = joypad_pressed
           $C00C = lvl1_score
           $C00E = lvl1_scroll_speed
           $C00D = lvl1_scroll_delay
           $C00F = lvl1_speed_character
           $C006 = lvl1_is_shooting
           $C010 = lvl1_speed_shot
           $C007 = lvl1_enemy_direction
           $C008 = lvl1_enemy_delay
           $C00B = lvl1_enemy_speed_y
           $C009 = lvl1_enemy_speed_delay
           $C00A = lvl1_enemy_speed_x
  SECTION: $C100-$C127 ($0028 bytes) ["OAM Vars"]
           $C100 = sprite_0
           $C104 = sprite_1
           $C108 = sprite_2
           $C10C = sprite_3
           $C110 = sprite_4
           $C114 = sprite_5
           $C118 = sprite_6
           $C11C = sprite_7
           $C120 = sprite_8
           $C124 = sprite_9
    SLACK: $0FC1 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  EMPTY

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

