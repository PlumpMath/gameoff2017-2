ROM Bank #0 (HOME):
  SECTION: $0000-$0002 ($0003 bytes) ["Org $00"]
           $0000 = RST_00
  SECTION: $0008-$000A ($0003 bytes) ["Org $08"]
           $0008 = RST_08
  SECTION: $0010-$0012 ($0003 bytes) ["Org $10"]
           $0010 = RST_10
  SECTION: $0018-$001A ($0003 bytes) ["Org $18"]
           $0018 = RST_18
  SECTION: $0020-$0022 ($0003 bytes) ["Org $20"]
           $0020 = RST_20
  SECTION: $0028-$002A ($0003 bytes) ["Copy Data"]
           $0028 = RST_28
  SECTION: $0030-$0032 ($0003 bytes) ["Org $30"]
           $0030 = RST_30
  SECTION: $0038-$003A ($0003 bytes) ["Org $38"]
           $0038 = RST_38
  SECTION: $0040-$0040 ($0001 bytes) ["V-Blank IRQ Vector"]
           $0040 = VBL_VECT
  SECTION: $0048-$0048 ($0001 bytes) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 bytes) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 bytes) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$00F8 ($0099 bytes) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0100-$014B ($004C bytes) ["Start"]
  SECTION: $2628-$27B4 ($018D bytes) ["Utilitaries"]
           $2672 = COPY_DATA
           $2715 = JOY_FALSE
           $271C = WAIT_LOOP_INT
           $271A = WAIT_LOOP_EXT1
           $2718 = WAIT_LOOP_EXT2
           $2718 = WAIT
           $264D = CLEAR_RAM
           $2628 = WAIT_VBLANK
           $274C = FADE_OUT
           $272B = FADE_IN
           $2695 = READ_JOYPAD
           $270B = JOY_START
           $26ED = JOY_A
           $26D9 = JOY_UP
           $26E3 = JOY_DOWN
           $26C5 = JOY_RIGHT
           $26CF = JOY_LEFT
           $27A8 = RAND_NUM
           $276D = FADE_IN_INV
           $278E = FADE_OUT_INV
           $268C = LOAD_MAP
           $2683 = LOAD_TILES
           $262F = CLEAR_MAP
           $263E = CLEAR_OAM
           $265C = DMA_COPY
           $26F7 = JOY_B
           $2644 = CLEAR_OAM_LOOP
           $2701 = JOY_SELECT
           $2678 = COPY_DATA_LOOP
           $268C = LOAD_MAP_LOOP
           $2637 = CLEAR_MAP_LOOP
           $2653 = CLEAR_RAM_LOOP
  SECTION: $100D-$1A8C ($0A80 bytes) ["Background Map"]
           $180D = LVL2_MAP_0
           $184D = LVL2_MAP_1
           $188D = LVL2_MAP_2
           $18CD = LVL2_MAP_3
           $190D = LVL2_MAP_4
           $194D = LVL2_MAP_5
           $198D = LVL2_MAP_6
           $19CD = LVL2_MAP_7
           $1A0D = LVL2_MAP_8
           $100D = SPLASH_MAP
           $140D = LVL1_MAP
           $1A4D = WINDOWMAP
  SECTION: $1A8D-$1F0C ($0480 bytes) ["Sprite Tiles"]
           $1A8D = SPRITES
  SECTION: $01AD-$100C ($0E60 bytes) ["Background Tiles"]
           $0D0D = LVL2_BG0_0
           $0D4D = LVL2_BG0_1
           $0D8D = LVL2_BG0_2
           $0DCD = LVL2_BG1_0
           $0E0D = LVL2_BG1_1
           $0E4D = LVL2_BG1_2
           $0E8D = LVL2_BG2_0
           $0ECD = LVL2_BG2_1
           $0F0D = LVL2_BG2_2
           $0F4D = LVL2_BG3_0
           $0F8D = LVL2_BG3_1
           $0FCD = LVL2_BG3_2
           $01AD = TILES
  SECTION: $2490-$2627 ($0198 bytes) ["SplashScreen"]
           $2561 = SPLASH_SCROLL_END
           $2549 = SPLASH_SCREEN
           $25E2 = EXIT_SPLASH
           $2595 = CHANGE_PRESS_START
           $2577 = SPLASH_WAIT
           $25AF = PRESS_START_COLOUR_0
           $25C0 = PRESS_START_COLOUR_1
           $25D1 = PRESS_START_COLOUR_2
           $2490 = INIT_SPLASH
  SECTION: $3255-$32C6 ($0072 bytes) ["Level1"]
           $3296 = LEVEL1_LOOP
           $32AE = LVL1_SCROLL_BACKGROUND
           $32BB = LVL1_SCROLL_BG
           $3255 = LEVEL1
  SECTION: $2BC0-$2CED ($012E bytes) ["Level1Character"]
           $2BC0 = LVL1_INIT_CHARACTER
           $2BEE = LVL1_UPDATE_CHAR
           $2C93 = LVL1_CHARACTER_ENEMY_COLLISION
           $2C09 = LVL1_CHECK_UP
           $2C2D = LVL1_CHECK_DOWN
           $2C51 = LVL1_CHECK_RIGHT
           $2C72 = LVL1_CHECK_LEFT
           $2CED = LVL1_END_CHAR
  SECTION: $3025-$3105 ($00E1 bytes) ["Shot"]
           $3025 = LVL1_INIT_SHOT
           $3057 = LVL1_UPDATE_SHOT
           $3044 = LVL1_ACTIVATE_SHOT
           $3105 = LVL1_SHOT_END
           $3063 = LVL1_MOVE_RIGHT
           $30FA = LVL1_RESET_SHOT
           $307A = LVL1_SHOT_ENEMY_COLLISION_1
           $30B8 = LVL1_SHOT_ENEMY_COLLISION_2
  SECTION: $22D4-$248F ($01BC bytes) ["Level1Enemy"]
           $22D4 = LVL1_INIT_ENEMY
           $22F9 = LVL1_UPDATE_ENEMY
           $2381 = LVL1_RESET_ENEMY
           $2401 = LVL1_ENEMY0
           $2329 = LVL1_MOVE_ENEMY
           $2319 = LVL1_ENEMY_DIRECTION_UP
           $2321 = LVL1_ENEMY_DIRECTION_DOWN
           $2337 = LVL1_MOVE_ENEMY_DOWN
           $235C = LVL1_MOVE_ENEMY_UP
           $2488 = LVL1_ENEMY_END
           $2414 = LVL1_ENEMY1
           $242C = LVL1_ENEMY2
           $2449 = LVL1_ENEMY3
           $246B = LVL1_ENEMY4
           $23B3 = LVL1_GOTO_LEVEL2
  SECTION: $1F0D-$210B ($01FF bytes) ["Level2"]
           $1F0D = LEVEL2
           $2066 = LVL2_LOAD_MAP
           $1F48 = LEVEL2_LOOP
           $1F6E = LEVEL2_END_ANIM
           $202B = LEVEL2_RESTART
           $1FDD = LVL2_INIT_PLANET
           $1FA7 = LEVEL2_END_ANIM_LOOP
           $202F = LVL2_FADE_OUT
           $201E = LVL2_UPDATE_SPRITES_PLANET
           $2008 = LVL2_PLANET_ROW_INIT
           $2065 = LVL2_RET
  SECTION: $2F2B-$3024 ($00FA bytes) ["Level2Character"]
           $2F2B = LVL2_INIT_CHARACTER
           $2F4A = LVL2_UPDATE_CHARACTER
           $2FB6 = LVL2_CHECK_UP
           $2F62 = LVL2_SHOT
           $2F8C = LVL2_CHECK_ENEMY_1_COLLISION
           $3024 = LVL2_END_CHARACTER
           $2FD3 = LVL2_CHECK_DOWN
           $2FF0 = LVL2_CHECK_RIGHT
           $300A = LVL2_CHECK_LEFT
           $2F62 = LVL2_CHECK_ENEMY_0_COLLISION
  SECTION: $32C7-$330E ($0048 bytes) ["Level2Enemies"]
           $32C7 = LVL2_INIT_ENEMIES
           $32FF = LVL2_UPDATE_ENEMIES
           $330E = LVL2_ENEMY_END
  SECTION: $291C-$2A6D ($0152 bytes) ["Level2Enemy0"]
           $29CC = LVL2_UPDATE_ENEMY_0_POSITION
           $2A3B = LVL2_KILL_ENEMY_0
           $291C = LVL2_INIT_ENEMY_0
           $296C = LVL2_UPDATE_ENEMY_0
           $291C = LVL_2_ENEMY_0_LOOP_POS_Y
           $292E = LVL_2_ENEMY_0_LOOP_POS_X
           $2978 = LVL2_UPDATE_ENEMY_0_SPRITE
           $29EF = LVL2_ENEMY_0_SPAWN
           $2988 = LVL2_CHANGE_ENEMY_0_SPRITE
           $2A04 = LVL2_ENEMY_0_DAMAGE
           $29C0 = LVL2_MOVE_ENEMY_0
  SECTION: $2A6E-$2BBF ($0152 bytes) ["Level2Enemy1"]
           $2B1E = LVL2_UPDATE_ENEMY_1_POSITION
           $2B8D = LVL2_KILL_ENEMY_1
           $2A6E = LVL2_INIT_ENEMY_1
           $2ABE = LVL2_UPDATE_ENEMY_1
           $2A6E = LVL_2_ENEMY_1_LOOP_POS_Y
           $2A80 = LVL_2_ENEMY_1_LOOP_POS_X
           $2ACA = LVL2_UPDATE_ENEMY_1_SPRITE
           $2B41 = LVL2_ENEMY_1_SPAWN
           $2ADA = LVL2_CHANGE_ENEMY_1_SPRITE
           $2B56 = LVL2_ENEMY_1_DAMAGE
           $2B12 = LVL2_MOVE_ENEMY_1
  SECTION: $2E1C-$2F2A ($010F bytes) ["Level2Background Animation"]
           $2E1C = LVL2_INIT_BACKGROUND
           $2E24 = LVL2_BACKGROUND_ANIMATE
           $2E31 = LVL2_CHANGE_BG0
           $2E6E = LVL2_CHANGE_BG1
           $2EAB = LVL2_CHANGE_BG2
           $2EE8 = LVL2_CHANGE_BG3
           $2F24 = LVL2_RESET
  SECTION: $210C-$22D3 ($01C8 bytes) ["Level3"]
           $210C = LEVEL3
           $2152 = LVL3_ANIM_BEGIN
           $218D = LVL3_SCROLL_BACKGROUND
           $216D = LEVEL3_LOOP
           $21AE = LEVEL3_END
           $219A = LVL3_SCROLL_BG
           $21AD = LVL3_SCROLL_END
  SECTION: $2CEE-$2E1B ($012E bytes) ["Level3Character"]
           $2CEE = LVL3_INIT_CHARACTER
           $2D1C = LVL3_UPDATE_CHAR
           $2DC1 = LVL3_CHARACTER_ENEMY_COLLISION
           $2D37 = LVL3_CHECK_UP
           $2D5B = LVL3_CHECK_DOWN
           $2D7F = LVL3_CHECK_RIGHT
           $2DA0 = LVL3_CHECK_LEFT
           $2E1B = LVL3_END_CHAR
  SECTION: $31C7-$3254 ($008E bytes) ["Level3Shot"]
           $31C7 = LVL3_INIT_SHOT
           $31F9 = LVL3_UPDATE_SHOT
           $31E6 = LVL3_ACTIVATE_SHOT
           $3254 = LVL3_SHOT_END
           $3205 = LVL3_MOVE_RIGHT
           $3249 = LVL3_RESET_SHOT
           $321C = LVL3_SHOT_BOSS_COLLISION
  SECTION: $27B5-$291B ($0167 bytes) ["Level3Boss"]
           $27B5 = LVL3_INIT_BOSS
           $280C = LVL3_UPDATE_BOSS_POSITION
           $282F = LVL3_UPDATE_BOSS
           $28F5 = LVL3_HIT_BOSS
           $283D = LVL3_BOSS_CHECK_SPRITE_DELAY
           $2882 = LVL3_CHECK_BOSS_POSITION
           $284D = LVL3_BOSS_CHANGE_SPRITE
           $286F = LVL3_BOSS_RESET_ANIM
           $289D = LVL3_BOSS_DIRECTION_UP
           $28A5 = LVL3_BOSS_DIRECTION_DOWN
           $28AD = LVL3_MOVE_BOSS
           $28BB = LVL3_MOVE_BOSS_DOWN
           $28D8 = LVL3_MOVE_BOSS_UP
           $2914 = LVL3_BOSS_END
           $290C = LVL3_BOSS_SHOT_SPEED_INC
  SECTION: $3106-$31C6 ($00C1 bytes) ["Level3BossShot"]
           $3106 = LVL3_INIT_BOSS_SHOT
           $313B = LVL3_UPDATE_BOSS_SHOT
           $3125 = LVL3_ACTIVATE_BOSS_SHOT
           $3144 = LVL3_BOSS_SHOT_MOVE_LEFT
           $31BB = LVL3_RESET_BOSS_SHOT
           $315B = LVL3_SHOT_CHAR_COLLISION
           $31C6 = LVL3_BOSS_SHOT_END
  SECTION: $0150-$01AC ($005D bytes) ["StartGame"]
           $0150 = START
           $01A4 = BEGIN_GAME
    SLACK: $0D40 bytes

WRAM Bank #0:
  SECTION: $C000-$C03C ($003D bytes) ["RAM Vars"]
           $C002 = joypad_down
           $C003 = joypad_pressed
           $C008 = seed_rand_num
           $C007 = press_start_colour
           $C006 = press_start_delay
           $C00F = lvl1_score
           $C011 = lvl1_scroll_speed
           $C010 = lvl1_scroll_delay
           $C012 = lvl1_speed_character
           $C009 = lvl1_is_shooting
           $C013 = lvl1_speed_shot
           $C00A = lvl1_enemy_direction
           $C014 = lvl1_plot_twist
           $C00B = lvl1_enemy_delay
           $C00E = lvl1_enemy_speed_y
           $C00C = lvl1_enemy_speed_delay
           $C00D = lvl1_enemy_speed_x
           $C01A = lvl2_enemy_0_x
           $C019 = lvl2_enemy_0_y
           $C020 = lvl2_enemy_1_x
           $C01F = lvl2_enemy_1_y
           $C026 = lvl2_score
           $C027 = lvl2_lives
           $C028 = lvl2_enemies_active
           $C029 = lvl2_anim_planet_delay
           $C017 = lvl2_speed_character
           $C025 = lvl2_is_shooting
           $C01D = lvl2_enemy_0_is_active
           $C023 = lvl2_enemy_1_is_active
           $C01E = lvl2_enemy_0_spawn_delay
           $C024 = lvl2_enemy_1_spawn_delay
           $C018 = lvl2_enemies_change_speed
           $C01B = lvl2_enemy_0_sprite_delay
           $C01C = lvl2_enemy_0_sprite_set
           $C021 = lvl2_enemy_1_sprite_delay
           $C022 = lvl2_enemy_1_sprite_set
           $C015 = lvl2_speed_anim_bg
           $C016 = lvl2_counter_anim_bg
           $C02B = lvl3_score
           $C02D = lvl3_scroll_speed
           $C02C = lvl3_scroll_delay
           $C037 = lvl3_boss_hits
           $C031 = lvl3_boss_x
           $C032 = lvl3_boss_y
           $C02E = lvl3_speed_character
           $C02A = lvl3_is_shooting
           $C02F = lvl3_speed_shot
           $C034 = lvl3_boss_delay
           $C035 = lvl3_boss_speed_delay
           $C03A = lvl3_boss_anim_delay
           $C03C = lvl3_boss_anim_set
           $C03B = lvl3_boss_anim_speed
           $C036 = lvl3_boss_speed_y
           $C033 = lvl3_boss_direction
           $C039 = lvl3_is_boss_shooting
           $C038 = lvl3_speed_boss_shot
  SECTION: $C100-$C17B ($007C bytes) ["OAM Vars"]
           $C100 = sprite_0
           $C104 = sprite_1
           $C108 = sprite_2
           $C10C = sprite_3
           $C110 = sprite_4
           $C114 = sprite_5
           $C118 = sprite_6
           $C11C = sprite_7
           $C120 = sprite_8
           $C124 = sprite_9
           $C144 = sprite_17
           $C164 = sprite_25
    SLACK: $0F47 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  EMPTY

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

